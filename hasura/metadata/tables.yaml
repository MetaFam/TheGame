- table:
    schema: public
    name: AccountType
  is_enum: true
  array_relationships:
  - name: guild_accounts
    using:
      foreign_key_constraint_on:
        column: type
        table:
          schema: public
          name: guild_account
  - name: player_accounts
    using:
      foreign_key_constraint_on:
        column: type
        table:
          schema: public
          name: player_account
- table:
    schema: public
    name: EnneagramType
  is_enum: true
  array_relationships:
  - name: players
    using:
      foreign_key_constraint_on:
        column: enneagram
        table:
          schema: public
          name: player
  select_permissions:
  - role: player
    permission:
      columns:
      - name
      - description
      filter: {}
  - role: public
    permission:
      columns:
      - description
      - name
      filter: {}
- table:
    schema: public
    name: GuildType
  is_enum: true
  array_relationships:
  - name: guilds
    using:
      foreign_key_constraint_on:
        column: type
        table:
          schema: public
          name: guild
  select_permissions:
  - role: player
    permission:
      columns:
      - name
      filter: {}
  - role: public
    permission:
      columns:
      - name
      filter: {}
- table:
    schema: public
    name: Map
  insert_permissions:
  - role: player
    permission:
      check: {}
      columns:
      - author_address
      - data
      - name
      - id
      backend_only: false
  - role: public
    permission:
      check: {}
      columns:
      - author_address
      - data
      - name
      - id
      backend_only: false
  select_permissions:
  - role: player
    permission:
      columns:
      - id
      - author_address
      - name
      - data
      filter: {}
  - role: public
    permission:
      columns:
      - id
      - author_address
      - name
      - data
      filter: {}
  update_permissions:
  - role: player
    permission:
      columns:
      - author_address
      - data
      - name
      - id
      filter: {}
      check: null
  - role: public
    permission:
      columns:
      - author_address
      - data
      - name
      - id
      filter: {}
      check: null
- table:
    schema: public
    name: PlayerRank
  is_enum: true
  array_relationships:
  - name: players
    using:
      foreign_key_constraint_on:
        column: rank
        table:
          schema: public
          name: player
- table:
    schema: public
    name: SkillCategory
  is_enum: true
  array_relationships:
  - name: skills
    using:
      foreign_key_constraint_on:
        column: category
        table:
          schema: public
          name: skill
- table:
    schema: public
    name: guild
  object_relationships:
  - name: GuildType
    using:
      foreign_key_constraint_on: type
  array_relationships:
  - name: guild_accounts
    using:
      foreign_key_constraint_on:
        column: guild_id
        table:
          schema: public
          name: guild_account
  - name: guild_players
    using:
      foreign_key_constraint_on:
        column: guild_id
        table:
          schema: public
          name: guild_player
  select_permissions:
  - role: player
    permission:
      columns:
      - id
      - type
      - name
      - logo
      - description
      - join_button_url
      - moloch_address
      - discord_invite_url
      - website_url
      - guildname
      filter: {}
  - role: public
    permission:
      columns:
      - description
      - discord_invite_url
      - join_button_url
      - logo
      - moloch_address
      - name
      - website_url
      - id
      - type
      - guildname
      filter: {}
- table:
    schema: public
    name: guild_account
  object_relationships:
  - name: AccountType
    using:
      foreign_key_constraint_on: type
  - name: guild
    using:
      foreign_key_constraint_on: guild_id
- table:
    schema: public
    name: guild_player
  object_relationships:
  - name: guild
    using:
      foreign_key_constraint_on: guild_id
  - name: player
    using:
      foreign_key_constraint_on: player_id
  select_permissions:
  - role: player
    permission:
      columns: []
      filter: {}
  - role: public
    permission:
      columns: []
      filter: {}
- table:
    schema: public
    name: me
  object_relationships:
  - name: player
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: player
        column_mapping:
          id: id
  select_permissions:
  - role: player
    permission:
      columns:
      - id
      - username
      - ethereum_address
      filter:
        id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: player
  object_relationships:
  - name: EnneagramType
    using:
      foreign_key_constraint_on: enneagram
  - name: PlayerRank
    using:
      foreign_key_constraint_on: rank
  - name: player_type
    using:
      foreign_key_constraint_on: player_type_id
  array_relationships:
  - name: guild_players
    using:
      foreign_key_constraint_on:
        column: player_id
        table:
          schema: public
          name: guild_player
  - name: player_accounts
    using:
      foreign_key_constraint_on:
        column: player_id
        table:
          schema: public
          name: player_account
  - name: player_skills
    using:
      foreign_key_constraint_on:
        column: player_id
        table:
          schema: public
          name: player_skill
  remote_relationships:
  - definition:
      remote_field:
        getBoxProfile:
          arguments:
            address: $ethereum_address
      hasura_fields:
      - ethereum_address
      remote_schema: backend
    name: box_profile
  - definition:
      remote_field:
        getDaoHausMemberships:
          arguments:
            memberAddress: $ethereum_address
      hasura_fields:
      - ethereum_address
      remote_schema: backend
    name: daohausMemberships
  select_permissions:
  - role: player
    permission:
      columns:
      - availability_hours
      - enneagram
      - ethereum_address
      - id
      - player_type_id
      - rank
      - role
      - sc_identity_id
      - timezone
      - total_xp
      - username
      filter: {}
  - role: public
    permission:
      columns:
      - availability_hours
      - enneagram
      - ethereum_address
      - id
      - rank
      - role
      - timezone
      - total_xp
      - username
      filter: {}
  update_permissions:
  - role: player
    permission:
      columns:
      - availability_hours
      - enneagram
      - player_type_id
      - role
      - timezone
      - username
      filter:
        id:
          _eq: X-Hasura-User-Id
      check: null
      set:
        id: x-hasura-User-Id
  event_triggers:
  - name: fetchBoxVerifiedAccounts
    definition:
      enable_manual: true
      insert:
        columns: '*'
      update:
        columns:
        - ethereum_address
    retry_conf:
      num_retries: 0
      interval_sec: 10
      timeout_sec: 60
    webhook_from_env: TRIGGERS_ENDPOINT
- table:
    schema: public
    name: player_account
  object_relationships:
  - name: AccountType
    using:
      foreign_key_constraint_on: type
  - name: player
    using:
      foreign_key_constraint_on: player_id
  select_permissions:
  - role: player
    permission:
      columns:
      - player_id
      - identifier
      - type
      filter: {}
  - role: public
    permission:
      columns:
      - identifier
      - type
      - player_id
      filter: {}
- table:
    schema: public
    name: player_skill
  object_relationships:
  - name: player
    using:
      foreign_key_constraint_on: player_id
  - name: skill
    using:
      foreign_key_constraint_on: skill_id
  insert_permissions:
  - role: player
    permission:
      check:
        player_id:
          _eq: X-Hasura-User-Id
      set:
        player_id: x-hasura-User-Id
      columns:
      - skill_id
      backend_only: false
  select_permissions:
  - role: player
    permission:
      columns:
      - player_id
      - skill_id
      filter: {}
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - player_id
      - skill_id
      filter: {}
      allow_aggregations: true
  delete_permissions:
  - role: player
    permission:
      filter:
        player_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: player_type
  array_relationships:
  - name: players
    using:
      foreign_key_constraint_on:
        column: player_type_id
        table:
          schema: public
          name: player
  select_permissions:
  - role: player
    permission:
      columns:
      - id
      - title
      - description
      - imageUrl
      filter: {}
  - role: public
    permission:
      columns:
      - id
      - description
      - imageUrl
      - title
      filter: {}
- table:
    schema: public
    name: skill
  object_relationships:
  - name: SkillCategory
    using:
      foreign_key_constraint_on: category
  array_relationships:
  - name: player_skills
    using:
      foreign_key_constraint_on:
        column: skill_id
        table:
          schema: public
          name: player_skill
  insert_permissions:
  - role: player
    permission:
      check: {}
      columns:
      - name
      backend_only: false
  select_permissions:
  - role: player
    permission:
      columns:
      - category
      - name
      - id
      filter: {}
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - category
      - name
      - id
      filter: {}
      allow_aggregations: true
