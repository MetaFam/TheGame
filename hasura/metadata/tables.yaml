- table:
    name: AccountType
    schema: public
  is_enum: true
- table:
    name: ColorAspect
    schema: public
  array_relationships:
    - name: profiles
      using:
        foreign_key_constraint_on:
          column: color_mask
          table:
            name: profile
            schema: public
  select_permissions:
    - role: player
      permission:
        columns:
          - mask
          - name
          - description
        filter: {}
    - role: public
      permission:
        columns:
          - mask
          - description
          - name
        filter: {}
- table:
    name: ExplorerType
    schema: public
  configuration:
    column_config:
      image_url:
        custom_name: imageURL
    custom_column_names:
      image_url: imageURL
    custom_root_fields: {}
  array_relationships:
    - name: profiles
      using:
        foreign_key_constraint_on:
          column: explorer_type_title
          table:
            name: profile
            schema: public
  select_permissions:
    - role: player
      permission:
        columns:
          - description
          - id
          - image_url
          - title
        filter: {}
    - role: public
      permission:
        columns:
          - id
          - description
          - image_url
          - title
        filter: {}
- table:
    name: GuildStatus
    schema: public
  is_enum: true
- table:
    name: GuildType
    schema: public
  is_enum: true
  array_relationships:
    - name: Guilds
      using:
        foreign_key_constraint_on:
          column: type
          table:
            name: guild
            schema: public
  select_permissions:
    - role: player
      permission:
        columns:
          - name
        filter: {}
    - role: public
      permission:
        columns:
          - name
        filter: {}
- table:
    name: LinkType
    schema: public
  is_enum: true
  array_relationships:
    - name: links
      using:
        foreign_key_constraint_on:
          column: type
          table:
            name: link
            schema: public
  select_permissions:
    - role: player
      permission:
        columns:
          - description
          - type
        filter: {}
    - role: public
      permission:
        columns:
          - description
          - type
        filter: {}
- table:
    name: PlayerRank
    schema: public
  is_enum: true
- table:
    name: PlayerRole
    schema: public
  select_permissions:
    - role: player
      permission:
        columns:
          - description
          - basic
          - label
          - role
        filter: {}
    - role: public
      permission:
        columns:
          - description
          - basic
          - label
          - role
        filter: {}
- table:
    name: QuestCompletionStatus
    schema: public
  is_enum: true
  array_relationships:
    - name: quest_completions
      using:
        foreign_key_constraint_on:
          column: status
          table:
            name: quest_completion
            schema: public
- table:
    name: QuestRepetition
    schema: public
  is_enum: true
  array_relationships:
    - name: quests
      using:
        foreign_key_constraint_on:
          column: repetition
          table:
            name: quest
            schema: public
- table:
    name: QuestStatus
    schema: public
  is_enum: true
  array_relationships:
    - name: quests
      using:
        foreign_key_constraint_on:
          column: status
          table:
            name: quest
            schema: public
- table:
    name: SkillCategory
    schema: public
  is_enum: true
- table:
    name: balance
    schema: public
  configuration:
    column_config:
      executed_at:
        custom_name: executedAt
      player_address:
        custom_name: playerAddress
      token_address:
        custom_name: tokenAddress
    custom_column_names:
      executed_at: executedAt
      player_address: playerAddress
      token_address: tokenAddress
    custom_root_fields: {}
- table:
    name: dao
    schema: public
  configuration:
    column_config:
      contract_address:
        custom_name: contractAddress
      guild_id:
        custom_name: guildId
    custom_column_names:
      contract_address: contractAddress
      guild_id: guildId
    custom_root_fields: {}
  object_relationships:
    - name: guild
      using:
        foreign_key_constraint_on: guild_id
  array_relationships:
    - name: players
      using:
        foreign_key_constraint_on:
          column: dao_id
          table:
            name: dao_player
            schema: public
  select_permissions:
    - role: player
      permission:
        columns:
          - contract_address
          - label
          - network
          - url
          - guild_id
          - id
        filter: {}
    - role: public
      permission:
        columns:
          - contract_address
          - label
          - network
          - url
          - guild_id
          - id
        filter: {}
  update_permissions:
    - role: player
      permission:
        columns:
          - contract_address
          - label
          - network
          - url
        filter:
          guild:
            metadata:
              creator_id:
                _eq: X-Hasura-User-Id
        check: null
- table:
    name: dao_player
    schema: public
  configuration:
    column_config:
      dao_id:
        custom_name: daoId
      player_id:
        custom_name: playerId
    custom_column_names:
      dao_id: daoId
      player_id: playerId
    custom_root_fields: {}
  object_relationships:
    - name: Dao
      using:
        foreign_key_constraint_on: dao_id
    - name: Player
      using:
        foreign_key_constraint_on: player_id
  select_permissions:
    - role: player
      permission:
        columns:
          - dao_id
          - player_id
          - visible
        filter: {}
    - role: public
      permission:
        columns:
          - visible
          - dao_id
          - player_id
        filter: {}
  update_permissions:
    - role: player
      permission:
        columns:
          - visible
        filter:
          player_id:
            _eq: X-Hasura-User-Id
        check: null
- table:
    name: guild
    schema: public
  configuration:
    column_config:
      discord_id:
        custom_name: discordId
      join_button_url:
        custom_name: joinButtonUrl
      membership_through_discord:
        custom_name: membershipThroughDiscord
      profile_layout:
        custom_name: profileLayout
      show_discord_announcements:
        custom_name: showDiscordAnnouncements
      sort_position:
        custom_name: sortPosition
      updated_at:
        custom_name: updatedAt
      website_url:
        custom_name: websiteUrl
    custom_column_names:
      discord_id: discordId
      join_button_url: joinButtonUrl
      membership_through_discord: membershipThroughDiscord
      profile_layout: profileLayout
      show_discord_announcements: showDiscordAnnouncements
      sort_position: sortPosition
      updated_at: updatedAt
      website_url: websiteUrl
    custom_root_fields: {}
  object_relationships:
    - name: GuildType
      using:
        foreign_key_constraint_on: type
    - name: metadata
      using:
        manual_configuration:
          column_mapping:
            id: guild_id
          insertion_order: null
          remote_table:
            name: guild_metadata
            schema: public
  array_relationships:
    - name: daos
      using:
        foreign_key_constraint_on:
          column: guild_id
          table:
            name: dao
            schema: public
    - name: guild_players
      using:
        foreign_key_constraint_on:
          column: guild_id
          table:
            name: guild_player
            schema: public
    - name: links
      using:
        foreign_key_constraint_on:
          column: guild_id
          table:
            name: link
            schema: public
    - name: quests
      using:
        foreign_key_constraint_on:
          column: guild_id
          table:
            name: quest
            schema: public
  remote_relationships:
    - definition:
        hasura_fields:
          - discord_id
        remote_field:
          getGuildDiscordAnnouncements:
            arguments:
              guildDiscordId: $discord_id
        remote_schema: backend
      name: discordAnnouncements
  insert_permissions:
    - role: player
      permission:
        check: {}
        columns:
          - updated_at
  select_permissions:
    - role: player
      permission:
        columns:
          - description
          - discord_id
          - guildname
          - id
          - join_button_url
          - logo
          - membership_through_discord
          - name
          - profile_layout
          - show_discord_announcements
          - sort_position
          - status
          - type
          - website_url
        filter: {}
    - role: public
      permission:
        columns:
          - description
          - discord_id
          - guildname
          - id
          - join_button_url
          - logo
          - membership_through_discord
          - name
          - profile_layout
          - show_discord_announcements
          - sort_position
          - status
          - type
          - website_url
        filter: {}
  update_permissions:
    - role: player
      permission:
        columns:
          - updated_at
        filter: {}
        check: null
  event_triggers:
    - name: syncDiscordGuildMembers
      definition:
        enable_manual: false
        update:
          columns:
            - membership_through_discord
            - discord_id
            - status
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: TRIGGERS_ENDPOINT
- table:
    name: guild_metadata
    schema: public
  configuration:
    column_config:
      creator_id:
        custom_name: creatorId
      discord_id:
        custom_name: discordId
      discord_metadata:
        custom_name: discordMetadata
      guild_id:
        custom_name: guildId
    custom_column_names:
      creator_id: creatorId
      discord_id: discordId
      discord_metadata: discordMetadata
      guild_id: guildId
    custom_root_fields: {}
  object_relationships:
    - name: guild
      using:
        foreign_key_constraint_on: guild_id
    - name: player
      using:
        foreign_key_constraint_on: creator_id
  remote_relationships:
    - definition:
        hasura_fields:
          - discord_id
        remote_field:
          getGuildDiscordRoles:
            arguments:
              guildDiscordId: $discord_id
        remote_schema: backend
      name: discordRoles
  select_permissions:
    - role: player
      permission:
        columns:
          - guild_id
          - discord_metadata
          - creator_id
          - discord_id
        filter:
          creator_id:
            _eq: X-Hasura-User-Id
- table:
    name: guild_player
    schema: public
  configuration:
    column_config:
      guild_id:
        custom_name: guildId
      player_id:
        custom_name: playerId
    custom_column_names:
      guild_id: guildId
      player_id: playerId
    custom_root_fields: {}
  object_relationships:
    - name: Guild
      using:
        foreign_key_constraint_on: guild_id
    - name: Player
      using:
        foreign_key_constraint_on: player_id
  remote_relationships:
    - definition:
        hasura_fields:
          - guild_id
          - player_id
        remote_field:
          getDiscordServerMemberRoles:
            arguments:
              guildId: $guild_id
              playerId: $player_id
        remote_schema: backend
      name: discordRoles
  select_permissions:
    - role: player
      permission:
        columns:
          - guild_id
          - player_id
        filter: {}
    - role: public
      permission:
        columns:
          - guild_id
          - player_id
        filter: {}
- table:
    name: link
    schema: public
  configuration:
    column_config:
      guild_id:
        custom_name: guildId
      player_id:
        custom_name: playerId
    custom_column_names:
      guild_id: guildId
      player_id: playerId
    custom_root_fields: {}
  object_relationships:
    - name: LinkType
      using:
        foreign_key_constraint_on: type
    - name: guild
      using:
        foreign_key_constraint_on: guild_id
    - name: player
      using:
        foreign_key_constraint_on: player_id
  insert_permissions:
    - role: player
      permission:
        check:
          _or:
            - player_id:
                _eq: X-Hasura-User-Id
            - guild:
                metadata:
                  creator_id:
                    _eq: X-Hasura-User-Id
        columns:
          - guild_id
          - name
          - player_id
          - type
          - url
  select_permissions:
    - role: player
      permission:
        columns:
          - name
          - type
          - url
          - guild_id
          - id
          - player_id
        filter: {}
    - role: public
      permission:
        columns:
          - guild_id
          - id
          - name
          - player_id
          - type
          - url
        filter: {}
  update_permissions:
    - role: player
      permission:
        columns:
          - name
          - type
          - url
        filter:
          _or:
            - player_id:
                _eq: X-Hasura-User-Id
            - guild:
                metadata:
                  creator_id:
                    _eq: X-Hasura-User-Id
        check: null
  delete_permissions:
    - role: player
      permission:
        filter:
          _or:
            - player_id:
                _eq: X-Hasura-User-Id
            - guild:
                metadata:
                  creator_id:
                    _eq: X-Hasura-User-Id
- table:
    name: me
    schema: public
  configuration:
    column_config:
      ethereum_address:
        custom_name: ethereumAddress
    custom_column_names:
      ethereum_address: ethereumAddress
    custom_root_fields: {}
  object_relationships:
    - name: player
      using:
        manual_configuration:
          column_mapping:
            id: id
          insertion_order: null
          remote_table:
            name: player
            schema: public
  select_permissions:
    - role: player
      permission:
        columns:
          - id
          - username
          - ethereum_address
        filter:
          id:
            _eq: X-Hasura-User-Id
- table:
    name: player
    schema: public
  configuration:
    column_config:
      ceramic_profile_id:
        custom_name: ceramicProfileId
      created_at:
        custom_name: createdAt
      dashboard_layout:
        custom_name: dashboardLayout
      discord_id:
        custom_name: discordId
      ethereum_address:
        custom_name: ethereumAddress
      profile_layout:
        custom_name: profileLayout
      season_xp:
        custom_name: seasonXP
      total_xp:
        custom_name: totalXP
      updated_at:
        custom_name: updatedAt
    custom_column_names:
      ceramic_profile_id: ceramicProfileId
      created_at: createdAt
      dashboard_layout: dashboardLayout
      discord_id: discordId
      ethereum_address: ethereumAddress
      profile_layout: profileLayout
      season_xp: seasonXP
      total_xp: totalXP
      updated_at: updatedAt
    custom_root_fields: {}
  object_relationships:
    - name: profile
      using:
        manual_configuration:
          column_mapping:
            id: player_id
          insertion_order: null
          remote_table:
            name: profile
            schema: public
  array_relationships:
    - name: accounts
      using:
        foreign_key_constraint_on:
          column: player_id
          table:
            name: player_account
            schema: public
    - name: daos
      using:
        foreign_key_constraint_on:
          column: player_id
          table:
            name: dao_player
            schema: public
    - name: guilds
      using:
        foreign_key_constraint_on:
          column: player_id
          table:
            name: guild_player
            schema: public
    - name: links
      using:
        foreign_key_constraint_on:
          column: player_id
          table:
            name: link
            schema: public
    - name: quest_completions
      using:
        foreign_key_constraint_on:
          column: completed_by_player_id
          table:
            name: quest_completion
            schema: public
    - name: quests
      using:
        foreign_key_constraint_on:
          column: created_by_player_id
          table:
            name: quest
            schema: public
    - name: roles
      using:
        foreign_key_constraint_on:
          column: player_id
          table:
            name: player_role
            schema: public
    - name: skills
      using:
        foreign_key_constraint_on:
          column: player_id
          table:
            name: player_skill
            schema: public
    - name: xps
      using:
        foreign_key_constraint_on:
          column: player_id
          table:
            name: xp
            schema: public
  remote_relationships:
    - definition:
        hasura_fields:
          - id
        remote_field:
          getBrightIdStatus:
            arguments:
              contextId: $id
        remote_schema: backend
      name: brightid_status
    - definition:
        hasura_fields:
          - ethereum_address
        remote_field:
          getDaoHausMemberships:
            arguments:
              memberAddress: $ethereum_address
        remote_schema: backend
      name: daohausMemberships
    - definition:
        hasura_fields:
          - ethereum_address
        remote_field:
          getTokenBalances:
            arguments:
              address: $ethereum_address
        remote_schema: backend
      name: token_balances
  select_permissions:
    - role: player
      permission:
        columns:
          - ceramic_profile_id
          - created_at
          - dashboard_layout
          - ethereum_address
          - id
          - profile_layout
          - rank
          - role
          - season_xp
          - total_xp
        filter: {}
        allow_aggregations: true
    - role: public
      permission:
        columns:
          - ceramic_profile_id
          - ethereum_address
          - id
          - profile_layout
          - rank
          - role
          - season_xp
          - total_xp
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: player
      permission:
        columns:
          - dashboard_layout
          - profile_layout
          - role
          - updated_at
        filter:
          id:
            _eq: X-Hasura-User-Id
        check: {}
        set:
          id: x-hasura-User-Id
  event_triggers:
    - name: cacheComposeDBProfile
      definition:
        enable_manual: true
        insert:
          columns: '*'
        update:
          columns:
            - ceramic_profile_id
            - ethereum_address
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook: '{{TRIGGERS_ENDPOINT}}'
    - name: playerRankUpdated
      definition:
        enable_manual: false
        update:
          columns:
            - rank
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: TRIGGERS_ENDPOINT
- table:
    name: player_account
    schema: public
  configuration:
    column_config:
      player_id:
        custom_name: playerId
    custom_column_names:
      player_id: playerId
    custom_root_fields: {}
  object_relationships:
    - name: Player
      using:
        foreign_key_constraint_on: player_id
  insert_permissions:
    - role: player
      permission:
        check:
          player_id:
            _eq: X-Hasura-User-Id
        columns:
          - identifier
          - player_id
          - type
  select_permissions:
    - role: player
      permission:
        columns:
          - player_id
          - identifier
          - type
        filter: {}
    - role: public
      permission:
        columns:
          - player_id
          - identifier
          - type
        filter: {}
  update_permissions:
    - role: player
      permission:
        columns:
          - identifier
        filter:
          player_id:
            _eq: X-Hasura-User-Id
        check: null
- table:
    name: player_role
    schema: public
  object_relationships:
    - name: PlayerRole
      using:
        foreign_key_constraint_on: role
  insert_permissions:
    - role: player
      permission:
        check:
          player_id:
            _eq: X-Hasura-User-Id
        set:
          player_id: x-hasura-User-Id
        columns:
          - rank
          - role
  select_permissions:
    - role: player
      permission:
        columns:
          - player_id
          - role
          - rank
        filter: {}
    - role: public
      permission:
        columns:
          - rank
          - role
          - player_id
        filter: {}
  update_permissions:
    - role: player
      permission:
        columns:
          - rank
        filter:
          player_id:
            _eq: X-Hasura-User-Id
        check: null
  delete_permissions:
    - role: player
      permission:
        filter:
          player_id:
            _eq: X-Hasura-User-Id
  event_triggers:
    - name: playerRoleChanged
      definition:
        delete:
          columns: '*'
        enable_manual: false
        insert:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: TRIGGERS_ENDPOINT
- table:
    name: player_skill
    schema: public
  object_relationships:
    - name: Skill
      using:
        foreign_key_constraint_on: skill_id
  insert_permissions:
    - role: player
      permission:
        check:
          player_id:
            _eq: X-Hasura-User-Id
        set:
          player_id: x-hasura-User-Id
        columns:
          - skill_id
  select_permissions:
    - role: player
      permission:
        columns:
          - player_id
          - skill_id
        filter: {}
        allow_aggregations: true
    - role: public
      permission:
        columns:
          - player_id
          - skill_id
        filter: {}
        allow_aggregations: true
  delete_permissions:
    - role: player
      permission:
        filter:
          player_id:
            _eq: X-Hasura-User-Id
- table:
    name: profile
    schema: public
  configuration:
    column_config:
      available_hours:
        custom_name: availableHours
      background_image_url:
        custom_name: backgroundImageURL
      banner_image_url:
        custom_name: bannerImageURL
      color_mask:
        custom_name: colorMask
      country_code:
        custom_name: countryCode
      explorer_type_title:
        custom_name: explorerTypeTitle
      last_checked_at:
        custom_name: lastCheckedAt
      player_id:
        custom_name: playerId
      profile_image_url:
        custom_name: profileImageURL
      time_zone:
        custom_name: timeZone
    custom_column_names:
      available_hours: availableHours
      background_image_url: backgroundImageURL
      banner_image_url: bannerImageURL
      color_mask: colorMask
      country_code: countryCode
      explorer_type_title: explorerTypeTitle
      last_checked_at: lastCheckedAt
      player_id: playerId
      profile_image_url: profileImageURL
      time_zone: timeZone
    custom_root_fields: {}
  object_relationships:
    - name: colorAspect
      using:
        foreign_key_constraint_on: color_mask
    - name: explorerType
      using:
        foreign_key_constraint_on: explorer_type_title
    - name: player
      using:
        foreign_key_constraint_on: player_id
  select_permissions:
    - role: player
      permission:
        columns:
          - available_hours
          - background_image_url
          - banner_image_url
          - color_mask
          - country_code
          - description
          - emoji
          - explorer_type_title
          - gender
          - id
          - location
          - name
          - player_id
          - profile_image_url
          - pronouns
          - time_zone
          - username
          - website
        filter: {}
    - role: public
      permission:
        columns:
          - available_hours
          - background_image_url
          - banner_image_url
          - color_mask
          - country_code
          - description
          - emoji
          - explorer_type_title
          - gender
          - id
          - location
          - name
          - player_id
          - profile_image_url
          - pronouns
          - time_zone
          - username
          - website
        filter: {}
  update_permissions:
    - role: player
      permission:
        columns:
          - available_hours
          - background_image_url
          - banner_image_url
          - color_mask
          - country_code
          - description
          - emoji
          - gender
          - location
          - name
          - profile_image_url
          - pronouns
          - time_zone
          - username
          - website
        filter:
          player_id:
            _eq: X-Hasura-User-Id
        check: null
- table:
    name: quest
    schema: public
  configuration:
    column_config:
      created_at:
        custom_name: createdAt
      created_by_player_id:
        custom_name: createdByPlayerId
      external_link:
        custom_name: externalLink
      guild_id:
        custom_name: guildId
    custom_column_names:
      created_at: createdAt
      created_by_player_id: createdByPlayerId
      external_link: externalLink
      guild_id: guildId
    custom_root_fields: {}
  object_relationships:
    - name: QuestRepetition
      using:
        foreign_key_constraint_on: repetition
    - name: QuestStatus
      using:
        foreign_key_constraint_on: status
    - name: guild
      using:
        foreign_key_constraint_on: guild_id
    - name: player
      using:
        foreign_key_constraint_on: created_by_player_id
  array_relationships:
    - name: quest_completions
      using:
        foreign_key_constraint_on:
          column: quest_id
          table:
            name: quest_completion
            schema: public
    - name: quest_roles
      using:
        manual_configuration:
          column_mapping:
            id: quest_id
          insertion_order: null
          remote_table:
            name: quest_role
            schema: public
    - name: quest_skills
      using:
        foreign_key_constraint_on:
          column: quest_id
          table:
            name: quest_skill
            schema: public
  insert_permissions:
    - role: player
      permission:
        check: {}
        columns: []
        backend_only: true
  select_permissions:
    - role: player
      permission:
        columns:
          - cooldown
          - created_at
          - created_by_player_id
          - description
          - external_link
          - guild_id
          - id
          - image
          - repetition
          - status
          - title
        filter: {}
        allow_aggregations: true
    - role: public
      permission:
        columns:
          - cooldown
          - created_at
          - created_by_player_id
          - description
          - external_link
          - guild_id
          - id
          - image
          - repetition
          - status
          - title
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: player
      permission:
        columns:
          - cooldown
          - description
          - external_link
          - guild_id
          - image
          - repetition
          - status
          - title
        filter:
          _and:
            - created_by_player_id:
                _eq: X-Hasura-User-Id
            - status:
                _eq: OPEN
        check:
          _or:
            - repetition:
                _ne: RECURRING
            - _and:
                - repetition:
                    _eq: RECURRING
                - cooldown:
                    _is_null: false
- table:
    name: quest_completion
    schema: public
  configuration:
    column_config:
      completed_by_player_id:
        custom_name: completedByPlayerId
      quest_id:
        custom_name: questId
      submission_link:
        custom_name: submissionLink
      submission_text:
        custom_name: submissionText
      submitted_at:
        custom_name: submittedAt
    custom_column_names:
      completed_by_player_id: completedByPlayerId
      quest_id: questId
      submission_link: submissionLink
      submission_text: submissionText
      submitted_at: submittedAt
    custom_root_fields: {}
  object_relationships:
    - name: QuestCompletionStatus
      using:
        foreign_key_constraint_on: status
    - name: completed
      using:
        manual_configuration:
          column_mapping:
            quest_id: id
          insertion_order: null
          remote_table:
            name: quest
            schema: public
    - name: player
      using:
        foreign_key_constraint_on: completed_by_player_id
    - name: quest
      using:
        foreign_key_constraint_on: quest_id
  select_permissions:
    - role: player
      permission:
        columns:
          - completed_by_player_id
          - id
          - quest_id
          - status
          - submission_link
          - submission_text
          - submitted_at
        filter: {}
    - role: public
      permission:
        columns:
          - completed_by_player_id
          - id
          - quest_id
          - status
          - submission_link
          - submission_text
          - submitted_at
        filter: {}
  update_permissions:
    - role: player
      permission:
        columns:
          - submission_link
          - submission_text
        filter:
          _and:
            - status:
                _eq: PENDING
            - completed_by_player_id:
                _eq: X-Hasura-User-Id
        check: null
- table:
    name: quest_role
    schema: public
  configuration:
    column_config:
      quest_id:
        custom_name: questId
    custom_column_names:
      quest_id: questId
    custom_root_fields: {}
  object_relationships:
    - name: PlayerRole
      using:
        foreign_key_constraint_on: role
    - name: quest
      using:
        foreign_key_constraint_on: quest_id
  insert_permissions:
    - role: player
      permission:
        check:
          quest:
            created_by_player_id:
              _eq: X-Hasura-User-Id
        columns:
          - rank
          - role
          - quest_id
  select_permissions:
    - role: player
      permission:
        columns:
          - quest_id
          - rank
          - role
        filter: {}
    - role: public
      permission:
        columns:
          - rank
          - role
          - quest_id
        filter: {}
  delete_permissions:
    - role: player
      permission:
        filter:
          quest:
            created_by_player_id:
              _eq: X-Hasura-User-Id
- table:
    name: quest_skill
    schema: public
  configuration:
    column_config:
      quest_id:
        custom_name: questId
      skill_id:
        custom_name: skillId
    custom_column_names:
      quest_id: questId
      skill_id: skillId
    custom_root_fields: {}
  object_relationships:
    - name: quest
      using:
        foreign_key_constraint_on: quest_id
    - name: skill
      using:
        foreign_key_constraint_on: skill_id
  insert_permissions:
    - role: player
      permission:
        check:
          quest:
            created_by_player_id:
              _eq: X-Hasura-User-Id
        columns:
          - quest_id
          - skill_id
  select_permissions:
    - role: player
      permission:
        columns:
          - quest_id
          - skill_id
        filter: {}
    - role: public
      permission:
        columns:
          - quest_id
          - skill_id
        filter: {}
  delete_permissions:
    - role: player
      permission:
        filter:
          quest:
            created_by_player_id:
              _eq: X-Hasura-User-Id
- table:
    name: skill
    schema: public
  array_relationships:
    - name: Player_Skills
      using:
        foreign_key_constraint_on:
          column: skill_id
          table:
            name: player_skill
            schema: public
    - name: quest_skills
      using:
        foreign_key_constraint_on:
          column: skill_id
          table:
            name: quest_skill
            schema: public
  insert_permissions:
    - role: player
      permission:
        check: {}
        columns:
          - name
  select_permissions:
    - role: player
      permission:
        columns:
          - category
          - id
          - name
        filter: {}
        allow_aggregations: true
    - role: public
      permission:
        columns:
          - category
          - name
          - id
        filter: {}
        allow_aggregations: true
- table:
    name: token
    schema: public
  configuration:
    column_config:
      chain_id:
        custom_name: chainId
      created_at:
        custom_name: createdAt
      guild_id:
        custom_name: guildId
      last_block_height:
        custom_name: lastBlockHeight
      safe_address:
        custom_name: safeAddress
      updated_at:
        custom_name: updatedAt
    custom_column_names:
      chain_id: chainId
      created_at: createdAt
      guild_id: guildId
      last_block_height: lastBlockHeight
      safe_address: safeAddress
      updated_at: updatedAt
    custom_root_fields: {}
  object_relationships:
    - name: guild
      using:
        foreign_key_constraint_on: guild_id
  array_relationships:
    - name: xps
      using:
        foreign_key_constraint_on:
          column: token_address
          table:
            name: xp
            schema: public
- table:
    name: xp
    schema: public
  configuration:
    column_config:
      created_at:
        custom_name: createdAt
      player_id:
        custom_name: playerId
      seasonal_balance:
        custom_name: seasonalBalance
      token_address:
        custom_name: tokenAddress
      updated_at:
        custom_name: updatedAt
    custom_column_names:
      created_at: createdAt
      player_id: playerId
      seasonal_balance: seasonalBalance
      token_address: tokenAddress
      updated_at: updatedAt
    custom_root_fields: {}
  object_relationships:
    - name: player
      using:
        foreign_key_constraint_on: player_id
    - name: token
      using:
        foreign_key_constraint_on: token_address
