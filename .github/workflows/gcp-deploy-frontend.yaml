name: Update Frontend Deployment on Cloud Run

on:
  workflow_dispatch:
    inputs:
      cache_key:
        description: Optional cache key component to force invalidation of the build cache.
        required: false
        default: ""
  push:
    branches:
      - alec-develop

env:
  PROJECT_ID: metagame-thegame
  REGISTRY_REGION: us-east4
  REGISTRY_REPO: thegame
  DEPLOYMENT_DOMAIN: a.run.app
  CLOUDRUN_SUFFIX: mjhnbmqqna-uk
  DEPLOYMENT_ENV: ${{github.ref_name}}
  FRONTEND_SERVICE: frontend-${{github.ref_name}}
  FRONTEND_PORT: 3000
  GRAPHQL_URL: https://api-staging.metagame.wtf/v1/graphql

jobs:
  start-deployment:
    name: Generate Deployment Start Message
    runs-on: ubuntu-latest

    outputs:
      deployment_id: ${{steps.create-message.outputs.deployment_id}}

    steps:
      - name: Start Deployment
        uses: bobheadxi/deployments@v1
        id: create-message
        with:
          step: start
          token: ${{github.token}}
          env: ${{env.DEPLOYMENT_ENV}}
          desc: "Frontend deployment for #${{github.ref_name}} by ${{github.event.pusher.login}}"
          ref: ${{github.head_ref}}
          auto_inactive: false
          logs: https://github.com/${{github.repository}}/commit/${{github.event.after}}/checks

  cancel-previous:
    name: Cancel Existing Runs
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Existing Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{github.token}}

  env:
    name: Environment Variables
    runs-on: ubuntu-latest
    needs: [cancel-previous]

    outputs:
      PROJECT_ID: ${{env.PROJECT_ID}}
      REGISTRY_REGION: ${{env.REGISTRY_REGION}}
      REGISTRY_REPO: ${{env.REGISTRY_REPO}}
      DEPLOYMENT_DOMAIN: ${{env.DEPLOYMENT_DOMAIN}}
      CLOUDRUN_SUFFIX: ${{env.CLOUDRUN_SUFFIX}}
      FRONTEND_SERVICE: ${{env.FRONTEND_SERVICE}}
      FRONTEND_PORT: ${{env.FRONTEND_PORT}}
      CLOUDRUN_REGION: ${{steps.first.outputs.CLOUDRUN_REGION}}
      DOCKER_REGISTRY: ${{steps.first.outputs.DOCKER_REGISTRY}}
      FRONTEND_URL: ${{steps.first.outputs.FRONTEND_URL}}
      DOCKER_PATH: ${{steps.second.outputs.DOCKER_PATH}}
      FRONTEND_TAG: ${{steps.third.outputs.FRONTEND_TAG}}

    steps:
      - name: First Interpolation of Variables
        id: first
        run: |
          echo "::set-output name=CLOUDRUN_REGION::${{env.REGISTRY_REGION}}"
          echo "::set-output name=DOCKER_REGISTRY::${{env.REGISTRY_REGION}}-docker.pkg.dev"
          echo "::set-output name=FRONTEND_URL::\
          https://${{env.FRONTEND_SERVICE}}-${{env.CLOUDRUN_SUFFIX}}.${{env.DEPLOYMENT_DOMAIN}}"

      - name: Those Variables May Now Be Interpolated
        id: second
        run: |
          echo "::set-output name=DOCKER_PATH::\
          ${{steps.first.outputs.DOCKER_REGISTRY}}/${{env.PROJECT_ID}}/${{env.REGISTRY_REPO}}"

      - name: And That Result Again In Another Step
        id: third
        run: |
          echo "::set-output name=FRONTEND_TAG::\
          ${{steps.second.outputs.DOCKER_PATH}}/frontend:${{github.ref_name}}"

  undeploy-frontend:
    name: Undeploy Frontend
    runs-on: ubuntu-latest
    needs: [env]

    steps:
      - name: Set Up gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{needs.env.outputs.PROJECT_ID}}
          service_account_key: ${{secrets.GCP_SA_KEY}}
          export_default_credentials: true

      - name: "Delete Service: ${{needs.env.outputs.FRONTEND_SERVICE}}"
        continue-on-error: true
        run: |
          gcloud -q run services delete ${{needs.env.outputs.FRONTEND_SERVICE}} \
            --region ${{needs.env.outputs.CLOUDRUN_REGION}}

  delete-frontend:
    name: Delete Frontend Container Image
    runs-on: ubuntu-latest
    needs: [env]

    steps:
      - name: Set Up gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{needs.env.outputs.PROJECT_ID}}
          service_account_key: ${{secrets.GCP_SA_KEY}}
          export_default_credentials: true

      - name: "Delete Container Image: ${{needs.env.outputs.FRONTEND_TAG}}"
        continue-on-error: true
        run: gcloud -q artifacts docker images delete ${{needs.env.outputs.FRONTEND_TAG}}

  build-frontend:
    name: Build Frontend Container Image
    runs-on: ubuntu-latest
    needs: [env, delete-frontend, undeploy-frontend]

    steps:
      - name: "Checkout: ${{github.ref_name}}"
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.after}}

      - name: "Build Container Image: ${{needs.env.outputs.FRONTEND_TAG}}"
        uses: mattes/cached-docker-build-action@v1
        with:
          args: |
            . -f docker/frontend/Dockerfile \
              --tag ${{needs.env.outputs.FRONTEND_TAG}} \
              --build-arg GRAPHQL_URL=${{needs.env.outputs.GRAPHQL_URL}}
          cache_key: "${{github.event.inputs.cache_key}}-${{hashFiles('packages/web/**', 'packages/design-system/**', 'packages/utils/**', 'package.json')}}"

      - name: "Login to Registry: ${{needs.env.outputs.DOCKER_REGISTRY}}"
        uses: docker/login-action@v1
        with:
          registry: ${{needs.env.outputs.DOCKER_REGISTRY}}
          username: _json_key
          password: ${{secrets.GCP_SA_KEY}}

      - name: "Push Container Image: ${{needs.env.outputs.FRONTEND_TAG}}"
        run: docker push ${{needs.env.outputs.FRONTEND_TAG}}

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: [env, build-frontend]

    steps:
      - name: Set Up gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{needs.env.outputs.PROJECT_ID}}
          service_account_key: ${{secrets.GCP_SA_KEY}}
          export_default_credentials: true

      - name: "Deploy Container Image: ${{needs.env.outputs.FRONTEND_SERVICE}}"
        run: |
          gcloud -q run deploy ${{needs.env.outputs.FRONTEND_SERVICE}} \
            --image ${{needs.env.outputs.FRONTEND_TAG}} \
            --region ${{needs.env.outputs.CLOUDRUN_REGION}} \
            --port ${{needs.env.outputs.FRONTEND_PORT}} \
            --cpu 1 \
            --memory 512Mi \
            --ingress all \
            --max-instances 1 \
            --allow-unauthenticated \
            --set-env-vars WEB3_STORAGE_TOKEN=${{secrets.WEB3_STORAGE_TOKEN}} \
            --set-env-vars OPENSEA_API_KEY=${{secrets.OPENSEA_API_KEY}} \
            --set-env-vars NEXT_PUBLIC_IMGIX_TOKEN=${{secrets.IMGIX_TOKEN}} \
            --set-env-vars NEXT_PUBLIC_GRAPHQL_URL=${{needs.env.outputs.GRAPHQL_URL}}

  finish-deployment:
    name: Finish Deployment
    runs-on: ubuntu-latest
    needs: [env, start-deployment, deploy-frontend]
    if: always()

    env:
      result: ${{needs.deploy-frontend.result}}

    steps:
      - name: Finish Deployment
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{github.token}}
          env: ${{env.DEPLOYMENT_ENV}}
          env_url: ${{needs.env.outputs.FRONTEND_URL}}
          status: ${{env.result == 'skipped' && 'cancelled' || env.result}}
          deployment_id: ${{needs.start-deployment.outputs.deployment_id}}
