services:
  # A Docker web service
  - type: web
    name: hasura
    env: docker
    healthCheckPath: /healthz
    numInstances: 1
    dockerfilePath: ./hasura/Dockerfile
    dockerContext: ./hasura
    envVars:
      - fromGroup: hasura-secrets
      - key: HASURA_GRAPHQL_DATABASE_URL
        fromDatabase:
          name: metagame-db
          property: connectionString
      - key: BACKEND_HOST
        fromService:
          name: backend
          type: pserv
          property: hostport
      - key: PORT
        value: 10000
      - key: HASURA_GRAPHQL_MIGRATIONS_SERVER_PORT
        value: 10000

  # backend
  - type: pserv
    name: backend
    env: docker
    numInstances: 1
    dockerfilePath: ./docker/backend/Dockerfile
    dockerContext: .
    envVars:
      - fromGroup: hasura-secrets
      - key: GRAPHQL_HOST
        fromService:
          name: hasura
          type: web
          property: host

  # Frontend (old)
  - type: web
    name: app-react
    env: static
    buildCommand: yarn app:build
    staticPublishPath: ./packages/app-react/build
    pullRequestPreviewsEnabled: true
    routes:
      - type: rewrite
        source: /*
        destination: /index
    envVars:
      - fromGroup: frontend

  # NextJS Frontend (new)
  - type: web
    name: web
    env: static
    buildCommand: yarn web:build
    staticPublishPath: ./packages/web/out
    pullRequestPreviewsEnabled: true
    envVars:
      - fromGroup: frontend

databases:
  - name: metagame-db
    plan: starter

envVarGroups:
  - name: hasura-secrets
    envVars:
      - key: HASURA_GRAPHQL_ADMIN_SECRET
        generateValue: true
  - name: frontend
    envVars:
      - key: REACT_APP_INFURA_ID
        sync: false
      - key: REACT_APP_GRAPHQL_URL
        sync: false
